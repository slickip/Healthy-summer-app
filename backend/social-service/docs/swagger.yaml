definitions:
  models.ActivityFeed:
    properties:
      created_at:
        type: string
      event_data:
        additionalProperties: true
        type: object
      event_type:
        type: string
      id:
        type: integer
      user_id:
        type: integer
    type: object
  models.ChallangeParticipants:
    properties:
      challange_type_id:
        type: integer
      challangesType:
        $ref: '#/definitions/models.ChallangesTypes'
      id:
        type: integer
      join_at:
        type: string
      progress:
        type: integer
      status:
        type: string
      user_id:
        type: integer
    type: object
  models.Challanges:
    properties:
      challange_type_id:
        type: integer
      challangesType:
        $ref: '#/definitions/models.ChallangesTypes'
      createdAt:
        type: string
      creator_id:
        type: integer
      description:
        type: string
      end_date:
        type: string
      goal_value:
        type: integer
      id:
        type: integer
      start_date:
        type: string
      title:
        type: string
    type: object
  models.ChallangesTypes:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Messages:
    properties:
      content:
        type: string
      id:
        type: integer
      reciever_id:
        type: integer
      sender_id:
        type: integer
      sent_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/challenges:
    delete:
      description: Delete an existing challenge
      parameters:
      - description: Challenge ID
        in: query
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Challenge not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a challenge
      tags:
      - challenges
    get:
      description: Get a list of all available challenges
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Challanges'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: List all challenges
      tags:
      - challenges
    post:
      consumes:
      - application/json
      description: Create a new challenge by the authenticated user
      parameters:
      - description: Challenge to create
        in: body
        name: challenge
        required: true
        schema:
          $ref: '#/definitions/models.Challanges'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Challanges'
        "400":
          description: Invalid input
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Create new challenge
      tags:
      - challenges
    put:
      consumes:
      - application/json
      description: Update an existing challenge
      parameters:
      - description: Challenge ID
        in: query
        name: id
        required: true
        type: integer
      - description: Challenge update data
        in: body
        name: challenge
        required: true
        schema:
          $ref: '#/definitions/models.Challanges'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Challanges'
        "400":
          description: Invalid ID or request body
          schema:
            type: string
        "404":
          description: Challenge not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a challenge
      tags:
      - challenges
  /api/challenges/join:
    post:
      consumes:
      - application/json
      description: Join an existing challenge as a participant
      parameters:
      - description: Participant data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChallangeParticipants'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ChallangeParticipants'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "409":
          description: Already joined
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Join a challenge
      tags:
      - challenges
  /api/challenges/leaderboard:
    get:
      description: Returns ranked participants for a challenge
      parameters:
      - description: Challenge ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ChallangeParticipants'
            type: array
      summary: Get leaderboard for a challenge
      tags:
      - challenges
  /api/challenges/my:
    get:
      description: Get challenges created by the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Challanges'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get user's challenges
      tags:
      - challenges
  /api/messages:
    get:
      description: Retrieve message history between authenticated user and specified
        friend
      parameters:
      - description: Friend ID to get conversation with
        in: query
        name: friend_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Messages'
            type: array
        "400":
          description: Missing or invalid friend_id
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get conversation history
      tags:
      - messaging
    post:
      consumes:
      - application/json
      description: Send a private message to specified user
      parameters:
      - description: Message data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Messages'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Messages'
        "400":
          description: Invalid input data
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Send a message to another user
      tags:
      - messaging
  /api/social/feed/friends:
    get:
      description: Returns recent activities of the authenticated user's friends
      produces:
      - application/json
      responses:
        "200":
          description: List of friends' activities, empty array if no friends or activities
          schema:
            items:
              $ref: '#/definitions/models.ActivityFeed'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get friends activity feed
      tags:
      - social
swagger: "2.0"
